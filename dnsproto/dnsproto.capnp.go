// Code generated by capnpc-go. DO NOT EDIT.

package dnsproto

import (
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
)

type Data struct{ capnp.Struct }

// Data_TypeID is the unique identifier for the type Data.
const Data_TypeID = 0x92b4cfc156bfd883

func NewData(s *capnp.Segment) (Data, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Data{st}, err
}

func NewRootData(s *capnp.Segment) (Data, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Data{st}, err
}

func ReadRootData(msg *capnp.Message) (Data, error) {
	root, err := msg.RootPtr()
	return Data{root.Struct()}, err
}

func (s Data) String() string {
	str, _ := text.Marshal(0x92b4cfc156bfd883, s.Struct)
	return str
}

func (s Data) Request() (Data_Request, error) {
	p, err := s.Struct.Ptr(0)
	return Data_Request{Struct: p.Struct()}, err
}

func (s Data) HasRequest() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Data) SetRequest(v Data_Request) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewRequest sets the request field to a newly
// allocated Data_Request struct, preferring placement in s's segment.
func (s Data) NewRequest() (Data_Request, error) {
	ss, err := NewData_Request(s.Struct.Segment())
	if err != nil {
		return Data_Request{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s Data) Response() (Data_Response, error) {
	p, err := s.Struct.Ptr(1)
	return Data_Response{Struct: p.Struct()}, err
}

func (s Data) HasResponse() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Data) SetResponse(v Data_Response) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewResponse sets the response field to a newly
// allocated Data_Response struct, preferring placement in s's segment.
func (s Data) NewResponse() (Data_Response, error) {
	ss, err := NewData_Response(s.Struct.Segment())
	if err != nil {
		return Data_Response{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

// Data_List is a list of Data.
type Data_List struct{ capnp.List }

// NewData creates a new list of Data.
func NewData_List(s *capnp.Segment, sz int32) (Data_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return Data_List{l}, err
}

func (s Data_List) At(i int) Data { return Data{s.List.Struct(i)} }

func (s Data_List) Set(i int, v Data) error { return s.List.SetStruct(i, v.Struct) }

func (s Data_List) String() string {
	str, _ := text.MarshalList(0x92b4cfc156bfd883, s.List)
	return str
}

// Data_Promise is a wrapper for a Data promised by a client call.
type Data_Promise struct{ *capnp.Pipeline }

func (p Data_Promise) Struct() (Data, error) {
	s, err := p.Pipeline.Struct()
	return Data{s}, err
}

func (p Data_Promise) Request() Data_Request_Promise {
	return Data_Request_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

func (p Data_Promise) Response() Data_Response_Promise {
	return Data_Response_Promise{Pipeline: p.Pipeline.GetPipeline(1)}
}

type Data_Request struct{ capnp.Struct }

// Data_Request_TypeID is the unique identifier for the type Data_Request.
const Data_Request_TypeID = 0xee1446c181ff425d

func NewData_Request(s *capnp.Segment) (Data_Request, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Data_Request{st}, err
}

func NewRootData_Request(s *capnp.Segment) (Data_Request, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Data_Request{st}, err
}

func ReadRootData_Request(msg *capnp.Message) (Data_Request, error) {
	root, err := msg.RootPtr()
	return Data_Request{root.Struct()}, err
}

func (s Data_Request) String() string {
	str, _ := text.Marshal(0xee1446c181ff425d, s.Struct)
	return str
}

func (s Data_Request) Question() (capnp.TextList, error) {
	p, err := s.Struct.Ptr(0)
	return capnp.TextList{List: p.List()}, err
}

func (s Data_Request) HasQuestion() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Data_Request) SetQuestion(v capnp.TextList) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewQuestion sets the question field to a newly
// allocated capnp.TextList, preferring placement in s's segment.
func (s Data_Request) NewQuestion(n int32) (capnp.TextList, error) {
	l, err := capnp.NewTextList(s.Struct.Segment(), n)
	if err != nil {
		return capnp.TextList{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// Data_Request_List is a list of Data_Request.
type Data_Request_List struct{ capnp.List }

// NewData_Request creates a new list of Data_Request.
func NewData_Request_List(s *capnp.Segment, sz int32) (Data_Request_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Data_Request_List{l}, err
}

func (s Data_Request_List) At(i int) Data_Request { return Data_Request{s.List.Struct(i)} }

func (s Data_Request_List) Set(i int, v Data_Request) error { return s.List.SetStruct(i, v.Struct) }

func (s Data_Request_List) String() string {
	str, _ := text.MarshalList(0xee1446c181ff425d, s.List)
	return str
}

// Data_Request_Promise is a wrapper for a Data_Request promised by a client call.
type Data_Request_Promise struct{ *capnp.Pipeline }

func (p Data_Request_Promise) Struct() (Data_Request, error) {
	s, err := p.Pipeline.Struct()
	return Data_Request{s}, err
}

type Data_Response struct{ capnp.Struct }

// Data_Response_TypeID is the unique identifier for the type Data_Response.
const Data_Response_TypeID = 0xf814d111239377b2

func NewData_Response(s *capnp.Segment) (Data_Response, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Data_Response{st}, err
}

func NewRootData_Response(s *capnp.Segment) (Data_Response, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Data_Response{st}, err
}

func ReadRootData_Response(msg *capnp.Message) (Data_Response, error) {
	root, err := msg.RootPtr()
	return Data_Response{root.Struct()}, err
}

func (s Data_Response) String() string {
	str, _ := text.Marshal(0xf814d111239377b2, s.Struct)
	return str
}

func (s Data_Response) Answers() (capnp.TextList, error) {
	p, err := s.Struct.Ptr(0)
	return capnp.TextList{List: p.List()}, err
}

func (s Data_Response) HasAnswers() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Data_Response) SetAnswers(v capnp.TextList) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewAnswers sets the answers field to a newly
// allocated capnp.TextList, preferring placement in s's segment.
func (s Data_Response) NewAnswers(n int32) (capnp.TextList, error) {
	l, err := capnp.NewTextList(s.Struct.Segment(), n)
	if err != nil {
		return capnp.TextList{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// Data_Response_List is a list of Data_Response.
type Data_Response_List struct{ capnp.List }

// NewData_Response creates a new list of Data_Response.
func NewData_Response_List(s *capnp.Segment, sz int32) (Data_Response_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Data_Response_List{l}, err
}

func (s Data_Response_List) At(i int) Data_Response { return Data_Response{s.List.Struct(i)} }

func (s Data_Response_List) Set(i int, v Data_Response) error { return s.List.SetStruct(i, v.Struct) }

func (s Data_Response_List) String() string {
	str, _ := text.MarshalList(0xf814d111239377b2, s.List)
	return str
}

// Data_Response_Promise is a wrapper for a Data_Response promised by a client call.
type Data_Response_Promise struct{ *capnp.Pipeline }

func (p Data_Response_Promise) Struct() (Data_Response, error) {
	s, err := p.Pipeline.Struct()
	return Data_Response{s}, err
}

const schema_9f556eafdad48795 = "x\xdat\x8f\xb1K\xc3@\x14\xc6\xdfwil\x85j" +
	"\x13\x92Q'+*\xd8\xa2\x9b\x08R\x09\xe2\xd0\xa9W" +
	"\xd0\xcd!h\x06\x97K\xccE:\x06qpW\x1cE" +
	"\x10\x1c\x9c\x0a\xe2.\xfd\x0bDpP7\x05\x17\x07g" +
	"\xb7\x93\x8b\xd6\x94\xa2\xdb\xc7\xdd{\xbf\xef\xf7\xac\xee*" +
	"[4CF\xc4'\xcc\x11u\xf8x\xbb\xd9\xbb\xbb9" +
	"&\xbb\x02uz\xf4\xf0\xdc\x15\x1b\xe7d\xb2\"\x913" +
	"\x89\x0bg\x1a3D\xce\x0a:\x04\xb5\xe5\xa9\x83\xde\xba" +
	"\xfbA\xb6\x8b|\xd1\x84\x9e=\xc3\xabs\x95\xa5K4" +
	"\x08\xea\xbas2e\xdf\xbb\x9f\x7f\xcd>\xe1\xddy\xcb" +
	"\xd2\x0b\x1aTS;BFq\x98\x84\xa8o\xfb\x91\x88" +
	"\x96\xd7\x8a~\xe2\xf3\x12\x06\x1bG\xbd\x01\xa4\xd9L\xdb" +
	"\xc1\xde~ \x13\xd5\x0ed\x14\x0a\x19\x10\x11/\x19\x05" +
	"\xa2\x02\x88\xec9\x8f\x88W\x0d\xf0\x05\x06\x1bp\xa1\x1f" +
	"kM\">o\x80/1\xa4\xf1\xf7>\xac\xbc\x83\x00" +
	"\x8b\xa0\xe2\x9c\x08+/\xfd\xf9\xed\xbb\xb2\xbe\xab\x9f\xf8" +
	"u-S\x0cd\xd2\x02x\xe1WbL\xf7\x95\x0d\xf0" +
	"Y\x06\x95\xb5\xed\x86BS\xc7\x09-\x03(\x13\xd3\xf1" +
	"?\xa4\x8c*Zc\x88\xe9ew\x82W\x19R_\xc8" +
	"N\x10\xcb!\xdeW\x00\x00\x00\xff\xffjk\x84<"

func init() {
	schemas.Register(schema_9f556eafdad48795,
		0x92b4cfc156bfd883,
		0xee1446c181ff425d,
		0xf814d111239377b2)
}
